///////////////////////////////////////////////////////////////////////////////
// Name:        FourCC.h
// Purpose:     Deprecated! Don't use anymore
// Author:      Orkhan Aliyev
// Created:     2022-01-15
// Copyright:   (c) 2022 Orkhan Aliyev
///////////////////////////////////////////////////////////////////////////////
#ifndef FOURCC_H
#define FOURCC_H

//
//#include <string>
//#include <vector>
//
//struct SNNBSSFourCC
//{
//	const std::vector<std::string> m_Codecs =
//	{
//		"AASC",
//		"AAS4",
//		"ABYR",
//		"ACTL",
//		"ADV1",
//		"ADVJ",
//		"AEIK",
//		"AEMI",
//		"AFLC",
//		"AFLI",
//		"AHDV",
//		"AJPG",
//		"AMPG",
//		"ANIM",
//		"AP41",
//		"AP42",
//		"ASLC",
//		"ASV1",
//		"ASV2",
//		"ASVX",
//		"ATM4",
//		"AUR2",
//		"AURA",
//		"AVC1",
//		"AVRN",
//		"BA81",
//		"BINK",
//		"BLZ0",
//		"BT20",
//		"BTCV",
//		"BW10",
//		"BYR1",
//		"BYR2",
//		"CC12",
//		"CDVC",
//		"CFCC",
//		"CGDI",
//		"CHAM",
//		"CJPG",
//		"CMYK",
//		"CPLA",
//		"CRAM",
//		"CSCD",
//		"CTRX",
//		"CVID",
//		"CWLT",
//		"CXY1",
//		"CXY2",
//		"CYUV",
//		"CYUY",
//		"D261",
//		"D263",
//		"DAVC",
//		"DCL1",
//		"DCL2",
//		"DCL3",
//		"DCL4",
//		"DCL5",
//		"DIV3",
//		"DIV4",
//		"DIV5",
//		"DIVX",
//		"DM4V",
//		"DMB1",
//		"DMB2",
//		"DMK2",
//		"DSVD",
//		"DUCK",
//		"DV25",
//		"DV50",
//		"DVAN",
//		"DVCS",
//		"DVE2",
//		"DVH1",
//		"DVHD",
//		"DVSD",
//		"DVSL",
//		"DVX1",
//		"DVX2",
//		"DVX3",
//		"DX50",
//		"DXGM",
//		"DXTC",
//		"DXTN",
//		"EKQ0",
//		"ELK0",
//		"EM2V",
//		"ES07",
//		"ESCP",
//		"ETV1",
//		"ETV2",
//		"ETVC",
//		"FFV1",
//		"FLJP",
//		"FMP4",
//		"FMVC",
//		"FPS1",
//		"FRWA",
//		"FRWD",
//		"FVF1",
//		"GEOX",
//		"GJPG",
//		"GLZW",
//		"GPEG",
//		"GWLT",
//		"H260",
//		"HDYC",
//		"HEVC",
//		"HFYU",
//		"HMCR",
//		"HMRR",
//		"I263",
//		"ICLB",
//		"IGOR",
//		"IJLV",
//		"IJPG",
//		"ILVC",
//		"ILVR",
//		"IPDV",
//		"IPMA",
//		"IR21",
//		"IRAW",
//		"ISME",
//		"IV30",
//		"IV32",
//		"IV40",
//		"IV50",
//		"JBYR",
//		"JPEG",
//		"JPGL",
//		"KB2A",
//		"KMVC",
//		"L261",
//		"L263",
//		"LBYR",
//		"LCMW",
//		"LCW2",
//		"LEAD",
//		"LGRY",
//		"LJ11",
//		"LJ22",
//		"LJ2K",
//		"LJ44",
//		"LJPG",
//		"LMP2",
//		"LMP4",
//		"LSVC",
//		"LSVM",
//		"LSVX",
//		"LZO1",
//		"M261",
//		"M263",
//		"M4CC",
//		"M4S2",
//		"MC12",
//		"MCAM",
//		"MJ2C",
//		"MJPG",
//		"MMES",
//		"MP2A",
//		"MP2T",
//		"MP2V",
//		"MP42",
//		"MP43",
//		"MP4A",
//		"MP4S",
//		"MP4T",
//		"MP4V",
//		"MPEG",
//		"MPG4",
//		"MPGI",
//		"MR16",
//		"MRCA",
//		"MRLE",
//		"MSVC",
//		"MSZH",
//		"MTX1",
//		"MVI1",
//		"MVI2",
//		"MWV1",
//		"NAVI",
//		"NDSC",
//		"NDSM",
//		"NDSP",
//		"NDSS",
//		"NDXC",
//		"NDXH",
//		"NDXP",
//		"NDXS",
//		"NHVU",
//		"NI24",
//		"NTN1",
//		"NTN2",
//		"NVDS",
//		"NVHS",
//		"NVS0",
//		"NVT0",
//		"PDVC",
//		"PGVV",
//		"PHMO",
//		"PIM1",
//		"PIM2",
//		"PIMJ",
//		"PIXL",
//		"PJPG",
//		"PVEZ",
//		"PVMM",
//		"PVW2",
//		"QPEG",
//		"QPEQ",
//		"RGBT",
//		"RLE",
//		"RLE4",
//		"RLE8",
//		"RMP4",
//		"RPZA",
//		"RT21",
//		"RV20",
//		"RV30",
//		"RV40",
//		"S422",
//		"SAN3",
//		"SDCC",
//		"SEDG",
//		"SFMC",
//		"SMK2",
//		"SMKA",
//		"SMP4",
//		"SMSC",
//		"SMSD",
//		"SMSV",
//		"SP40",
//		"SP44",
//		"SP54",
//		"SPIG",
//		"SQZ2",
//		"STVA",
//		"STVB",
//		"STVC",
//		"STVX",
//		"STVY",
//		"SV10",
//		"SVQ1",
//		"SVQ3",
//		"TLMS",
//		"TLST",
//		"TM20",
//		"TM2X",
//		"TMIC",
//		"TMOT",
//		"TR20",
//		"TSCC",
//		"TV10",
//		"TVJP",
//		"TVMJ",
//		"TY0N",
//		"TY2C",
//		"TY2N",
//		"UCOD",
//		"ULTI",
//		"V210",
//		"V261",
//		"V655",
//		"VCR1",
//		"VCR2",
//		"VCR3",
//		"VDCT",
//		"VDOM",
//		"VDOW",
//		"VDTZ",
//		"VGPX",
//		"VIDS",
//		"VIFP",
//		"VIVO",
//		"VIXL",
//		"VLV1",
//		"VP30",
//		"VP31",
//		"VP40",
//		"VP50",
//		"VP60",
//		"VP61",
//		"VP62",
//		"VP70",
//		"VP80",
//		"VQC1",
//		"VQC2",
//		"VQJC",
//		"VSSV",
//		"VUUU",
//		"VX1K",
//		"VX2K",
//		"VXSP",
//		"VYU9",
//		"VYUY",
//		"WBVC",
//		"WHAM",
//		"WINX",
//		"WJPG",
//		"WMV1",
//		"WMV2",
//		"WMV3",
//		"WMVA",
//		"WNV1",
//		"WVC1",
//		"X263",
//		"X264",
//		"XLV0",
//		"XMPG",
//		"XVID",
//		"XWV0",
//		"XXAN",
//		"Y16:",
//		"Y411",
//		"Y41P",
//		"Y444",
//		"Y8",
//		"YC12",
//		"YUV8",
//		"YUV9",
//		"YUVP",
//		"YUY2",
//		"YUYV",
//		"YV12",
//		"YV16",
//		"YV92",
//		"ZLIB",
//		"ZMBV",
//		"ZPEG",
//		"ZYGO",
//		"ZYYY"
//	};
//
//	// Depending on m_Codecs list and hardware, 
//	// this function may be quite expensive that execution process may take longer than a minute
//	void CacheAvailableCodecs();
//
//	std::vector<std::string> GetAllAvailableCodecs()
//	{
//		// If Codec list is empty/not found, I'll use Default codecs as an option (temporarily?)
//		if (s_Codecs.empty())
//			s_Codecs = m_DefaultCodecs;
//
//		return s_Codecs;
//	}
//
//	// m_DefaultCodecs is used when no available codec is found
//	const std::vector<std::string> m_DefaultCodecs = {"MJPG", "DIVX", "XVID"};
//
//	// All available codecs will be stored in this vector:
//	inline static std::vector<std::string> s_Codecs;
//};
//
//inline SNNBSSFourCC SNNBSSFourCCAddressHandle()
//{
//	static SNNBSSFourCC Obj;
//	return Obj;
//}

#endif // ! FOURCC_H